#pragma checksum "C:\Users\Admin\source\repos\WinUI_Desktop\WinUI_Desktop\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "9FD84076245BAAFFC91278B668178DD2C099AE9C1A85220DDE1595CC224DD587"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using WinRT;

namespace WinUI_Desktop
{
    partial class MainWindow : 
        global::Microsoft.UI.Xaml.Window, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::WinRT.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainWindow.xaml line 15
                {
                    this.Splitter = target.As<Microsoft.UI.Xaml.Controls.SplitView>();
                }
                break;
            case 3: // MainWindow.xaml line 56
                {
                    this.HeaderPanel = target.As<Microsoft.UI.Xaml.Controls.StackPanel>();
                }
                break;
            case 4: // MainWindow.xaml line 67
                {
                    this.WindowsLogo = target.As<Microsoft.UI.Xaml.Controls.Image>();
                }
                break;
            case 5: // MainWindow.xaml line 68
                {
                    this.Header = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                }
                break;
            case 6: // MainWindow.xaml line 58
                {
                    global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton element6 = target.As<Microsoft.UI.Xaml.Controls.Primitives.ToggleButton>();
                    ((global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton)element6).Click += this.Button_Click;
                }
                break;
            case 7: // MainWindow.xaml line 60
                {
                    this.Hamburger = target.As<Microsoft.UI.Xaml.Controls.FontIcon>();
                }
                break;
            case 8: // MainWindow.xaml line 18
                {
                    this.SampleTitle = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                }
                break;
            case 9: // MainWindow.xaml line 19
                {
                    this.ScenarioControl = target.As<Microsoft.UI.Xaml.Controls.ListBox>();
                }
                break;
            case 10: // MainWindow.xaml line 28
                {
                    this.FooterPanel = target.As<Microsoft.UI.Xaml.Controls.StackPanel>();
                }
                break;
            case 11: // MainWindow.xaml line 30
                {
                    this.Copyright = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                }
                break;
            case 12: // MainWindow.xaml line 33
                {
                    this.LinksPanel = target.As<Microsoft.UI.Xaml.Controls.StackPanel>();
                }
                break;
            case 13: // MainWindow.xaml line 34
                {
                    global::Microsoft.UI.Xaml.Controls.HyperlinkButton element13 = target.As<Microsoft.UI.Xaml.Controls.HyperlinkButton>();
                    ((global::Microsoft.UI.Xaml.Controls.HyperlinkButton)element13).Click += this.Footer_Click;
                }
                break;
            case 14: // MainWindow.xaml line 37
                {
                    this.PrivacyLink = target.As<Microsoft.UI.Xaml.Controls.HyperlinkButton>();
                    ((global::Microsoft.UI.Xaml.Controls.HyperlinkButton)this.PrivacyLink).Click += this.Footer_Click;
                }
                break;
            case 16: // MainWindow.xaml line 43
                {
                    this.ScenarioFrame = target.As<Microsoft.UI.Xaml.Controls.Frame>();
                }
                break;
            case 17: // MainWindow.xaml line 44
                {
                    this.StatusPanel = target.As<Microsoft.UI.Xaml.Controls.StackPanel>();
                }
                break;
            case 18: // MainWindow.xaml line 45
                {
                    this.StatusLabel = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                }
                break;
            case 19: // MainWindow.xaml line 46
                {
                    this.StatusBorder = target.As<Microsoft.UI.Xaml.Controls.Border>();
                }
                break;
            case 20: // MainWindow.xaml line 49
                {
                    this.StatusBlock = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

